# Generated from Cminus.g4 by ANTLR 4.7.1
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\37")
        buf.write("\u00a9\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\5\3\6\3\6")
        buf.write("\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13")
        buf.write("\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3")
        buf.write("\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20")
        buf.write("\3\21\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\24\3\25")
        buf.write("\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31")
        buf.write("\3\32\3\32\3\33\3\33\3\33\3\33\7\33\u008a\n\33\f\33\16")
        buf.write("\33\u008d\13\33\3\33\3\33\3\33\3\33\3\33\3\34\6\34\u0095")
        buf.write("\n\34\r\34\16\34\u0096\3\35\3\35\3\35\7\35\u009c\n\35")
        buf.write("\f\35\16\35\u009f\13\35\5\35\u00a1\n\35\3\36\6\36\u00a4")
        buf.write("\n\36\r\36\16\36\u00a5\3\36\3\36\3\u008b\2\37\3\3\5\4")
        buf.write("\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17")
        buf.write("\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63")
        buf.write("\33\65\34\67\359\36;\37\3\2\6\4\2C\\c|\3\2\63;\3\2\62")
        buf.write(";\5\2\13\f\17\17\"\"\2\u00ad\2\3\3\2\2\2\2\5\3\2\2\2\2")
        buf.write("\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3")
        buf.write("\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2")
        buf.write("\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2")
        buf.write("\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2")
        buf.write("\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63")
        buf.write("\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2")
        buf.write("\2\3=\3\2\2\2\5?\3\2\2\2\7A\3\2\2\2\tC\3\2\2\2\13G\3\2")
        buf.write("\2\2\rL\3\2\2\2\17N\3\2\2\2\21P\3\2\2\2\23R\3\2\2\2\25")
        buf.write("T\3\2\2\2\27V\3\2\2\2\31Y\3\2\2\2\33^\3\2\2\2\35d\3\2")
        buf.write("\2\2\37k\3\2\2\2!m\3\2\2\2#p\3\2\2\2%r\3\2\2\2\'t\3\2")
        buf.write("\2\2)w\3\2\2\2+z\3\2\2\2-}\3\2\2\2/\177\3\2\2\2\61\u0081")
        buf.write("\3\2\2\2\63\u0083\3\2\2\2\65\u0085\3\2\2\2\67\u0094\3")
        buf.write("\2\2\29\u00a0\3\2\2\2;\u00a3\3\2\2\2=>\7=\2\2>\4\3\2\2")
        buf.write("\2?@\7]\2\2@\6\3\2\2\2AB\7_\2\2B\b\3\2\2\2CD\7k\2\2DE")
        buf.write("\7p\2\2EF\7v\2\2F\n\3\2\2\2GH\7x\2\2HI\7q\2\2IJ\7k\2\2")
        buf.write("JK\7f\2\2K\f\3\2\2\2LM\7*\2\2M\16\3\2\2\2NO\7+\2\2O\20")
        buf.write("\3\2\2\2PQ\7.\2\2Q\22\3\2\2\2RS\7}\2\2S\24\3\2\2\2TU\7")
        buf.write("\177\2\2U\26\3\2\2\2VW\7k\2\2WX\7h\2\2X\30\3\2\2\2YZ\7")
        buf.write("g\2\2Z[\7n\2\2[\\\7u\2\2\\]\7g\2\2]\32\3\2\2\2^_\7y\2")
        buf.write("\2_`\7j\2\2`a\7k\2\2ab\7n\2\2bc\7g\2\2c\34\3\2\2\2de\7")
        buf.write("t\2\2ef\7g\2\2fg\7v\2\2gh\7w\2\2hi\7t\2\2ij\7p\2\2j\36")
        buf.write("\3\2\2\2kl\7?\2\2l \3\2\2\2mn\7>\2\2no\7?\2\2o\"\3\2\2")
        buf.write("\2pq\7>\2\2q$\3\2\2\2rs\7@\2\2s&\3\2\2\2tu\7@\2\2uv\7")
        buf.write("?\2\2v(\3\2\2\2wx\7?\2\2xy\7?\2\2y*\3\2\2\2z{\7#\2\2{")
        buf.write("|\7?\2\2|,\3\2\2\2}~\7-\2\2~.\3\2\2\2\177\u0080\7/\2\2")
        buf.write("\u0080\60\3\2\2\2\u0081\u0082\7,\2\2\u0082\62\3\2\2\2")
        buf.write("\u0083\u0084\7\61\2\2\u0084\64\3\2\2\2\u0085\u0086\7\61")
        buf.write("\2\2\u0086\u0087\7,\2\2\u0087\u008b\3\2\2\2\u0088\u008a")
        buf.write("\13\2\2\2\u0089\u0088\3\2\2\2\u008a\u008d\3\2\2\2\u008b")
        buf.write("\u008c\3\2\2\2\u008b\u0089\3\2\2\2\u008c\u008e\3\2\2\2")
        buf.write("\u008d\u008b\3\2\2\2\u008e\u008f\7,\2\2\u008f\u0090\7")
        buf.write("\61\2\2\u0090\u0091\3\2\2\2\u0091\u0092\b\33\2\2\u0092")
        buf.write("\66\3\2\2\2\u0093\u0095\t\2\2\2\u0094\u0093\3\2\2\2\u0095")
        buf.write("\u0096\3\2\2\2\u0096\u0094\3\2\2\2\u0096\u0097\3\2\2\2")
        buf.write("\u00978\3\2\2\2\u0098\u00a1\7\62\2\2\u0099\u009d\t\3\2")
        buf.write("\2\u009a\u009c\t\4\2\2\u009b\u009a\3\2\2\2\u009c\u009f")
        buf.write("\3\2\2\2\u009d\u009b\3\2\2\2\u009d\u009e\3\2\2\2\u009e")
        buf.write("\u00a1\3\2\2\2\u009f\u009d\3\2\2\2\u00a0\u0098\3\2\2\2")
        buf.write("\u00a0\u0099\3\2\2\2\u00a1:\3\2\2\2\u00a2\u00a4\t\5\2")
        buf.write("\2\u00a3\u00a2\3\2\2\2\u00a4\u00a5\3\2\2\2\u00a5\u00a3")
        buf.write("\3\2\2\2\u00a5\u00a6\3\2\2\2\u00a6\u00a7\3\2\2\2\u00a7")
        buf.write("\u00a8\b\36\2\2\u00a8<\3\2\2\2\b\2\u008b\u0096\u009d\u00a0")
        buf.write("\u00a5\3\b\2\2")
        return buf.getvalue()


class CminusLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    COMMENT = 26
    ID = 27
    NUMBER = 28
    WS = 29

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'['", "']'", "'int'", "'void'", "'('", "')'", "','", 
            "'{'", "'}'", "'if'", "'else'", "'while'", "'return'", "'='", 
            "'<='", "'<'", "'>'", "'>='", "'=='", "'!='", "'+'", "'-'", 
            "'*'", "'/'" ]

    symbolicNames = [ "<INVALID>",
            "COMMENT", "ID", "NUMBER", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "COMMENT", 
                  "ID", "NUMBER", "WS" ]

    grammarFileName = "Cminus.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


